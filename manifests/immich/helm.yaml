apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: immich
  namespace: immich
spec:
  interval: 1h0m0s
  timeout: 10m0s
  chart:
    spec:
      chart: immich
      version: ">=0.1.1 <1.0.0"
      sourceRef:
        kind: HelmRepository
        name: immich
        namespace: flux-system
      interval: 24h0m0s
  install:
    remediation:
      remediateLastFailure: true
  valuesFrom:
    - kind: Secret
      name: immich-values
  values:
    env:
      REDIS_HOSTNAME: redis-master.redis.svc
      DB_HOSTNAME:
        valueFrom:
          secretKeyRef:
            name: immich-pguser-immich
            key: host
      DB_USERNAME:
        valueFrom:
          secretKeyRef:
            name: immich-pguser-immich
            key: user
      DB_PASSWORD:
        valueFrom:
          secretKeyRef:
            name: immich-pguser-immich
            key: password
      DB_DATABASE_NAME:
        valueFrom:
          secretKeyRef:
            name: immich-pguser-immich
            key: dbname
      PGSSLMODE: verify-full
      PGSSLROOTCERT: /config/root.crt
      IMMICH_WEB_URL: '{{ printf "http://%s-web:3000" .Release.Name }}'
      IMMICH_SERVER_URL: '{{ printf "http://%s-server:3001" .Release.Name }}'
      IMMICH_MACHINE_LEARNING_URL: '{{ printf "http://%s-machine-learning:3003" .Release.Name }}'
    image:
      tag: v1.93.3 # {"$imagepolicy": "immich:immich:tag"}
    immich:
      persistence:
        library:
          existingClaim: library
    server:
      enabled: true
      image:
        repository: ghcr.io/immich-app/immich-server
        pullPolicy: IfNotPresent
      podSecurityContext:
        runAsUser: 10001
      persistence:
        config:
          enabled: true
          type: secret
          name: pgo-root-cacert
      ingress:
        main:
          enabled: true
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt-production
          hosts:
            - host: photos.seymour.family
              paths:
                - path: "/"
          tls:
            - hosts:
                - photos.seymour.family
              secretName: immich-tls
    microservices:
      enabled: true
      env:
        REVERSE_GEOCODING_DUMP_DIRECTORY: /geodata-cache
      podSecurityContext:
        runAsUser: 10001
      persistence:
        config:
          enabled: true
          type: secret
          name: pgo-root-cacert
        geodata-cache:
          enabled: true
          size: 1Gi
          type: emptyDir
          accessMode: ReadWriteMany
      image:
        repository: ghcr.io/immich-app/immich-server
        pullPolicy: IfNotPresent
    machine-learning:
      enabled: true
      podSecurityContext:
        runAsUser: 10001
      image:
        repository: ghcr.io/immich-app/immich-machine-learning
        pullPolicy: IfNotPresent
      env:
        TRANSFORMERS_CACHE: /cache
      persistence:
        cache:
          enabled: true
          size: 10Gi
          type: emptyDir
          accessMode: ReadWriteMany
      probes:
        liveness:
          spec:
            initialDelaySeconds: 180
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 6
        readiness:
          spec:
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 2
