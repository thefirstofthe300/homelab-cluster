apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: matrix
spec:
  interval: 24h0m0s
  install:
    remediation:
      retries: 1
      remediateLastFailure: true
  upgrade:
    remediation:
      retries: 3
  driftDetection:
    mode: enabled
  chart:
    spec:
      chart: matrix-stack
      version: "25.10.2"
      sourceRef:
        kind: HelmRepository
        name: ess-community
        namespace: flux-system
      interval: 24h0m0s
  values:
    certManager:
      clusterIssuer: letsencrypt-production
    elementAdmin:
      ingress:
        host: admin.synapse.seymour.family
    elementWeb:
      ingress:
        host: chat.seymour.family
    matrixAuthenticationService:
      additional:
        password-scheme.yml:
          config: |
            upstream_oauth2:
              providers:
                - id: 01K08QGSY65Q8ESZR5Z3PY6SRY
                  human_name: Authentik
                  token_endpoint_auth_method: client_secret_basic
                  client_id: kURaVQd6b5REhwlVJDgCdGZuGqO77n9pr8vP5eU7
                  client_secret: IN492nvbN5HlWa20St02GbJMGgX5keXhBpIQPNdgYzO6H3YLnpPnLZhTjr3TaSxaMhbrciLntyVyy11J5sqBR7jrBDUh3RBE7wPSf5dkIcWWNa8utxI8B14NTPEP285g
                  issuer: https://authentik.seymour.family/application/o/element-server-suite/
                  scope: "openid email profile preferred_username"
                  claims_imports:
                    localpart:
                      action: require
                      template: "{{ user.matrix_handle }}"
                      on_conflict: add
                    displayname:
                      action: require
                      template: "{{ user.name }}"
                    email:
                      action: require
                      template: "{{ user.email }}"
            passwords:
              enabled: false
              schemes:
                - version: 1
                  algorithm: bcrypt
                  unicode_normalization: true
                - version: 2
                  algorithm: argon2id
      ingress:
        host: mas.seymour.family
      postgres:
        host: synapse-postgres-rw.synapse.svc.cluster.local
        port: 5432
        user: mas
        password:
          secret: synapse-postgres-user-mas
          secretKey: password
        database: mas
        sslMode: prefer
    matrixRTC:
      ingress:
        host: mrtc.seymour.family
    serverName: seymour.family
    synapse:
      additional:
        room-config.yml:
          config: |
            forget_rooms_on_leave: true
            forgotten_room_retention_period: 1d
            dynamic_thumbnails: true
      ingress:
        host: matrix.seymour.family
      appservices:
        - secret: appservice-registrations
          secretKey: mautrix-signal.yaml
        - secret: appservice-registrations
          secretKey: mautrix-gmessages.yaml
        - secret: appservice-registrations
          secretKey: mautrix-discord.yaml
        - secret: appservice-registrations
          secretKey: mautrix-telegram.yaml
        - secret: appservice-registrations
          secretKey: doublepuppet.yaml
      workers:
        appservice:
          enabled: true
        federation-reader:
          enabled: true
        federation-inbound:
          enabled: true
        synchrotron:
          enabled: true
        sliding-sync:
          enabled: true
      signingKey:
        secret: matrix-synapse-signingkey
        secretKey: signing.key
      podSecurityContext:
        runAsNonRoot: true
        runAsUser: 991
        runAsGroup: 991
      media:
        storage:
          existingClaim: media
      postgres:
        host: synapse-postgres-rw.synapse.svc.cluster.local
        port: 5432
        user: synapse
        password:
          secret: synapse-postgres-user-synapse
          secretKey: password
        database: synapse
        sslMode: prefer
